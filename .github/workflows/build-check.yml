name: Build and Commit

on:
  pull_request:
    types: [closed]
    branches: [main]
  push:
    branches: [ main ]

jobs:
  build-commit-and-notify:
    name: Build and Commit Changed Resources
    runs-on: ubuntu-latest
    # Only run if the PR was merged (not just closed)
    if: github.event_name == 'push' || github.event.pull_request.merged == true
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          token: ${{ secrets.ADMIN_TOKEN }}

      # Pull latest changes to avoid conflicts
      - name: Pull latest changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git pull origin main --rebase

      - name: Check if source files changed in merged PR
        if: github.event_name == 'pull_request'
        id: source-check-pr
        run: |
          if git diff --name-only ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.merge_commit_sha }} | grep -qE '^resources/(js|css|sass|ts|vue)'; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "changed=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Check if source files changed in push
        if: github.event_name == 'push'
        id: source-check-push
        run: |
          # For push events, check the last commit
          if git diff --name-only HEAD~1 HEAD | grep -qE '^resources/(js|css|sass|ts|vue)'; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "changed=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Set source check result
        id: source-check
        run: |
          if [[ "${{ steps.source-check-pr.outputs.changed }}" == "true" || "${{ steps.source-check-push.outputs.changed }}" == "true" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "changed=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Setup PHP
        if: steps.source-check.outputs.changed == 'true'
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer

      - name: Cache Composer dependencies
        if: steps.source-check.outputs.changed == 'true'
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install PHP dependencies
        if: steps.source-check.outputs.changed == 'true'
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Setup Node.js
        if: steps.source-check.outputs.changed == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install Node.js dependencies
        if: steps.source-check.outputs.changed == 'true'
        run: npm install

      - name: Format Code
        if: steps.source-check.outputs.changed == 'true'
        run: npm run format

      - name: Run build
        if: steps.source-check.outputs.changed == 'true'
        run: npm run build

      - name: Check for build changes
        if: steps.source-check.outputs.changed == 'true'
        id: build-changes
        run: |
          git add public/build/manifest.json public/build/assets/ || true
          if git diff --staged --quiet; then
            echo "has-changes=false" >> "$GITHUB_OUTPUT"
          else
            echo "has-changes=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Commit and push build changes
        if: steps.source-check.outputs.changed == 'true' && steps.build-changes.outputs.has-changes == 'true'
        run: |
          # Pull again before committing to ensure we're up to date
          git pull origin main --rebase --autostash

          # Stage the build files
          git add public/build/manifest.json public/build/assets/

          # Check if there are still changes to commit after the pull
          if ! git diff --staged --quiet; then
            git commit -m "Build: Automated build update after PR merge [skip ci]"

            # Try to push with retry logic
            max_attempts=3
            attempt=1
            while [ $attempt -le $max_attempts ]; do
              echo "Push attempt $attempt of $max_attempts"
              if git push origin main; then
                echo "Successfully pushed on attempt $attempt"
                break
              else
                if [ $attempt -eq $max_attempts ]; then
                  echo "Failed to push after $max_attempts attempts"
                  exit 1
                fi
                echo "Push failed, pulling latest changes and retrying..."
                git pull origin main --rebase --autostash
                attempt=$((attempt + 1))
                sleep 2
              fi
            done
          else
            echo "No changes to commit after rebase"
          fi

      - name: Send deploy info to rdo.blog.br
        env:
          SECRET: ${{ secrets.DEPLOY_HOOK_SECRET }}
        run: |
          curl -X POST https://deployer.rdo.blog.br \
            -H "Content-Type: application/json" \
            -H "X-Deploy-Secret: $SECRET" \
            -d '{
              "repository": "${{ github.repository }}",
              "commit": "${{ github.sha }}",
              "ref": "${{ github.ref }}",
              "pusher": "${{ github.actor }}",
              "timestamp": "${{ github.event.head_commit.timestamp }}",
              "testing": true
            }'
